[package]
name = "tfrecord"
description = "Serialize and deserialize TFRecord data format from TensorFlow"
version = "0.13.0"
authors = ["Jerry Lin <jerry73204@gmail.com>"]
edition = "2021"
categories = ["parsing"]
documentation = "https://docs.rs/tfrecord/"
repository = "https://github.com/jerry73204/rust-tfrecord.git"
homepage = "https://github.com/jerry73204/rust-tfrecord"
build = "build.rs"
readme = "README.md"
license-file = "LICENSE"

[dependencies]
serde = { version = "1.0.136", features = ["derive"], optional = true }
futures = { version = "0.3.19", optional = true }
async-std = { version = "1.10.0", optional = true }
image = { version = "0.23.14", optional = true }
tch = { version = "0.6.1", optional = true }
ndarray = { version = "0.15.4", optional = true }
pin-project = { version = "1.0.10", optional = true }
thiserror = "1.0.30"
prost = "0.9.0"
crc = "2.1.0"
noisy_float = "0.2.0"
integer-encoding = "3.0.2"
num-traits = "0.2.14"
bytemuck = "1.7.3"
num = "0.4.0"
itertools = "0.10.3"
hostname = "0.3.1"
once_cell = "1.9.0"

[dev-dependencies]
async-std = { version = "1.10.0", features = ["attributes", "unstable"] }
serde = { version = "1.0.136", features = ["derive"] }
ureq = "2.4.0"
serde_json = "1.0.78"
rand = { version = "0.8.4", features = ["getrandom"] }
rand_distr = "0.4.3"
approx = "0.5.1"
flate2 = "1.0.22"
packed_struct = "0.10.0"
packed_struct_codegen = "0.10.0"
itertools = "0.10.3"
anyhow = "=1.0.48"
csv = "1.1.6"
indexmap = "1.8.0"
structopt = "0.3.26"

[build-dependencies]
glob = "0.3.0"
prost-build = "0.9.0"
anyhow = "=1.0.48"
ureq = "2.4.0"
tar = "0.4.38"
flate2 = "1.0.22"
hex = "0.4.3"
once_cell = "1.9.0"

[features]
generate_protobuf_src = []
full = ["async", "with-tch", "with-image", "with-ndarray", "with-serde"]
async = ["futures", "async-std", "pin-project"]
doc-only = ["full", "tch/doc-only"]
with-tch = ["tch", "with-image"]
with-image = ["image"]
with-ndarray = ["ndarray"]
with-serde = ["serde"]

[package.metadata.docs.rs]
features = ["full", "doc-only"]
no-default-features = true
